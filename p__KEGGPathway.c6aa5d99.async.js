(self.webpackChunkant_design_pro=self.webpackChunkant_design_pro||[]).push([[186],{5139:function(M,g,e){"use strict";e.r(g);var c=e(13062),o=e(71230),_=e(39428),i=e(3182),m=e(11849),p=e(32266),f=e(78370),u=e(80820),h=e.n(u),d=e(67294),t=e(25377),n=e(22528),a=e(85893);function s(P){return Promise.resolve((0,m.Z)((0,m.Z)({},P),{},{success:!0,data:h()(P.data,function(l){return(0,m.Z)({key:"".concat(l.pathway_id,"_").concat(l.ensembl_id)},l)})}))}var r=function(){var P=(0,i.Z)((0,_.Z)().mark(function l(E,D,w){var O;return(0,_.Z)().wrap(function(y){for(;;)switch(y.prev=y.next){case 0:return console.log("requestPathways: ",E,D,w),O=(0,n.m)("kegg_pathway",E,D,w),y.next=4,(0,p.dy)({page:E.current,page_size:E.pageSize,query_str:O}).then(function(v){return s(v)}).catch(function(v){return console.log("requestPathways Error: ",v),s({total:0,success:!0,data:[]})});case 4:return y.abrupt("return",y.sent);case 5:case"end":return y.stop()}},l)}));return function(E,D,w){return P.apply(this,arguments)}}(),b=function(){var l=(0,d.useRef)(),E=[{title:(0,a.jsx)(t._H,{id:"pages.KEGGPathway.pathwayId",defaultMessage:"Pathway ID"}),dataIndex:"pathway_id",sorter:!0,tip:"Each pathway map is identified by the combination of 2-4 letter prefix code and 5 digit number.",render:function(w,O){return(0,a.jsx)("a",{href:"https://www.kegg.jp/entry/".concat(O.pathway_id),rel:"noreferrer",target:"_blank",children:w})}},{title:(0,a.jsx)(t._H,{id:"pages.KEGGPathway.pathwayName",defaultMessage:"Pathway Name"}),align:"center",sorter:!0,dataIndex:"pathway_name",tip:"The name of a KEGG pathway."},{title:(0,a.jsx)(t._H,{id:"pages.KEGGPathway.geneSymbol",defaultMessage:"Gene Symbol"}),align:"center",dataIndex:"gene_symbol",sorter:!0,tip:"A gene symbol is a short-form abbreviation for a particular gene."},{title:(0,a.jsx)(t._H,{id:"pages.KEGGPathway.ensemblId",defaultMessage:"Ensembl ID"}),dataIndex:"ensembl_id",sorter:!0,tip:"Ensembl gene IDs begin with ENS for Ensembl, and then a G for gene."},{title:(0,a.jsx)(t._H,{id:"pages.KEGGPathway.entrezId",defaultMessage:"Entrez ID"}),align:"center",sorter:!0,dataIndex:"entrez_id",tip:"Entrez Gene provides unique integer identifiers for genes and other loci."}];return(0,a.jsx)(o.Z,{className:"keggpathway",children:(0,a.jsx)(f.Z,{className:"keggpathway__table",actionRef:l,rowKey:"key",search:{labelWidth:120},pagination:{showQuickJumper:!0,position:["topLeft"]},request:r,columns:E,rowSelection:{}})})};g.default=b},22528:function(M,g,e){"use strict";e.d(g,{m:function(){return c}});function c(o,_,i,m){console.log("makeQueryStr filter: ",m);var p=":select [:*] :from [:".concat(o,"]"),f="",u="";if(i){var h=Object.keys(i)[0],d=Object.values(i)[0];h&&d&&(d==="ascend"?f=":order-by [:".concat(h,"]"):f=":order-by [[:".concat(h," :desc]]"))}if(_){for(var t=[],n=0,a=Object.keys(_);n<a.length;n++){var s=a[n];["current","pageSize"].indexOf(s)<0&&_[s].length>0&&t.push("[:like [:upper :".concat(s,'] [:upper "%').concat(_[s],'%"]]'))}t.length==1?u=":where ".concat(t[0]):t.length>1&&(u=":where [:and ".concat(t.join(" "),"]"))}return"{".concat(p," ").concat(f," ").concat(u,"}")}},32266:function(M,g,e){"use strict";e.d(g,{zn:function(){return m},dy:function(){return h}});var c=e(39428),o=e(11849),_=e(3182),i=e(25377);function m(t,n){return p.apply(this,arguments)}function p(){return p=(0,_.Z)((0,c.Z)().mark(function t(n,a){return(0,c.Z)().wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",(0,i.WY)("/api/degs",(0,o.Z)({method:"GET",params:(0,o.Z)({},n)},a||{})));case 1:case"end":return r.stop()}},t)})),p.apply(this,arguments)}function f(t,n){return u.apply(this,arguments)}function u(){return u=_asyncToGenerator(_regeneratorRuntime().mark(function t(n,a){return _regeneratorRuntime().wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",request("/api/omics-data",_objectSpread({method:"GET",params:_objectSpread({},n)},a||{})));case 1:case"end":return r.stop()}},t)})),u.apply(this,arguments)}function h(t,n){return d.apply(this,arguments)}function d(){return d=(0,_.Z)((0,c.Z)().mark(function t(n,a){return(0,c.Z)().wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.abrupt("return",(0,i.WY)("/api/pathways",(0,o.Z)({method:"GET",params:(0,o.Z)({},n)},a||{})));case 1:case"end":return r.stop()}},t)})),d.apply(this,arguments)}}}]);
