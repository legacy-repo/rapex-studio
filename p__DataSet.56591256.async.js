(self.webpackChunkant_design_pro=self.webpackChunkant_design_pro||[]).push([[723],{68032:function(b,f,e){"use strict";e.r(f),e.d(f,{default:function(){return Z}});var c=e(58024),u=e(91894),o=e(13062),l=e(71230),h=e(39428),g=e(3182),p=e(11849),i=e(32266),m=e(78370),d=e(67294),t=e(25377),a=e(22528),r=e(85893);function s(j){return Promise.resolve((0,p.Z)((0,p.Z)({},j),{},{success:!0}))}var n=function(){var j=(0,g.Z)((0,h.Z)().mark(function x(v,y,E){return(0,h.Z)().wrap(function(_){for(;;)switch(_.prev=_.next){case 0:return console.log("requestDEGs: ",y,E),_.next=3,(0,i.zn)({page:v.current,page_size:v.pageSize,query_str:(0,a.m)("gut_000000_fpkm_ttest",v,y,E)}).then(function(D){return s(D)}).catch(function(D){return console.log("requestDEGs Error: ",D),s({total:0,success:!0,data:[]})});case 3:return _.abrupt("return",_.sent);case 4:case"end":return _.stop()}},x)}));return function(v,y,E){return j.apply(this,arguments)}}(),G=function(){var x=(0,d.useRef)(),v=[{title:(0,r.jsx)(t._H,{id:"pages.GeneList.ensemblId",defaultMessage:"Ensembl ID"}),dataIndex:"ensembl_id",sorter:!0,tip:"Ensembl gene IDs begin with ENS for Ensembl, and then a G for gene."},{title:(0,r.jsx)(t._H,{id:"pages.GeneList.entrezId",defaultMessage:"Entrez ID"}),align:"center",sorter:!0,dataIndex:"entrez_id",tip:"Entrez Gene provides unique integer identifiers for genes and other loci."},{title:(0,r.jsx)(t._H,{id:"pages.GeneList.geneSymbol",defaultMessage:"Gene Symbol"}),align:"center",dataIndex:"gene_symbol",sorter:!0,tip:"A gene symbol is a short-form abbreviation for a particular gene."},{title:(0,r.jsx)(t._H,{id:"pages.GeneList.pAdj",defaultMessage:"Adjusted Pvalue"}),align:"center",hideInSearch:!0,dataIndex:"padj",sorter:!0,tip:"Adjusted Pvalue."},{title:(0,r.jsx)(t._H,{id:"pages.GeneList.pvalue",defaultMessage:"Pvalue"}),align:"center",hideInSearch:!0,dataIndex:"pvalue",sorter:!0,tip:"A p-value is a statistical measurement used to validate a hypothesis against observed data."},{title:(0,r.jsx)(t._H,{id:"pages.GeneList.logfc",defaultMessage:"LogFC"}),align:"center",hideInSearch:!0,dataIndex:"logfc",sorter:!0,tip:"Log fold change = log(FC) Usually, the transformation is log at base 2, so the interpretation is straightforward: a log(FC) of 1 means twice as expressed."},{title:(0,r.jsx)(t._H,{id:"pages.GeneList.direction",defaultMessage:"Direction"}),align:"center",dataIndex:"direction",sorter:!0,tip:"`Up` means up-regulated, `Down` means down-regulated and `No` means no difference."}];return(0,r.jsx)(l.Z,{className:"genelist",children:(0,r.jsx)(m.Z,{className:"genelist__table",actionRef:x,rowKey:"key",search:{labelWidth:120},pagination:{showQuickJumper:!0,position:["topLeft"]},request:n,columns:v,rowSelection:{}})})},I=G,S=function(){return(0,r.jsx)(u.Z,{className:"dataset",children:(0,r.jsx)(I,{})})},Z=S},22528:function(b,f,e){"use strict";e.d(f,{m:function(){return c}});function c(u,o,l,h){console.log("makeQueryStr filter: ",h);var g=":select [:*] :from [:".concat(u,"]"),p="",i="";if(l){var m=Object.keys(l)[0],d=Object.values(l)[0];m&&d&&(d==="ascend"?p=":order-by [:".concat(m,"]"):p=":order-by [[:".concat(m," :desc]]"))}if(o){for(var t=[],a=0,r=Object.keys(o);a<r.length;a++){var s=r[a];["current","pageSize"].indexOf(s)<0&&o[s].length>0&&t.push("[:like [:upper :".concat(s,'] [:upper "%').concat(o[s],'%"]]'))}t.length==1?i=":where ".concat(t[0]):t.length>1&&(i=":where [:and ".concat(t.join(" "),"]"))}return"{".concat(g," ").concat(p," ").concat(i,"}")}},32266:function(b,f,e){"use strict";e.d(f,{zn:function(){return h},dy:function(){return m}});var c=e(39428),u=e(11849),o=e(3182),l=e(25377);function h(t,a){return g.apply(this,arguments)}function g(){return g=(0,o.Z)((0,c.Z)().mark(function t(a,r){return(0,c.Z)().wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt("return",(0,l.WY)("/api/degs",(0,u.Z)({method:"GET",params:(0,u.Z)({},a)},r||{})));case 1:case"end":return n.stop()}},t)})),g.apply(this,arguments)}function p(t,a){return i.apply(this,arguments)}function i(){return i=_asyncToGenerator(_regeneratorRuntime().mark(function t(a,r){return _regeneratorRuntime().wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt("return",request("/api/omics-data",_objectSpread({method:"GET",params:_objectSpread({},a)},r||{})));case 1:case"end":return n.stop()}},t)})),i.apply(this,arguments)}function m(t,a){return d.apply(this,arguments)}function d(){return d=(0,o.Z)((0,c.Z)().mark(function t(a,r){return(0,c.Z)().wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.abrupt("return",(0,l.WY)("/api/pathways",(0,u.Z)({method:"GET",params:(0,u.Z)({},a)},r||{})));case 1:case"end":return n.stop()}},t)})),d.apply(this,arguments)}}}]);
